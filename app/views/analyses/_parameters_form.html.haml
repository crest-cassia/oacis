.form-group
  = label(:analysis, :submitted_to, 'submitted_to', class: 'col-md-2 control-label')
  .col-md-3
    - host_names = analyzer.executable_on.map {|h| [h.name, h.id.to_s]}.sort_by {|h| h[0]}
    - host_names += HostGroup.all.map {|hg| ["HostGroup:#{hg.name}", hg.id.to_s] }.sort_by {|h| h[0]}
    - selected_id = host_names.first.last
    = select(:analysis, :submitted_to, options_for_select(host_names, selected: selected_id), {}, {class: 'form-control'})
.form-group
  = label(:analysis, :priority, 'Priority', class: 'col-md-2 control-label')
  .col-md-3
    = select(:analysis, :priority, options_for_select(Submittable::PRIORITY_ORDER.sort_by {|a| a[0]}.map {|a| [a[1], a[0]]}, selected: 1), {}, {class: 'form-control'})
- if analyzer.support_mpi
  .form-group
    = label(:analysis, :mpi_procs, "MPI procs", class: 'col-md-2 control-label')
    .col-md-3
      = text_field(:analysis, :mpi_procs, value: 1, class: 'form-control')
- if analyzer.support_omp
  .form-group
    = label(:analysis, :omp_threads, "OMP threads", class: 'col-md-2 control-label')
    .col-md-3
      = text_field(:analysis, :omp_threads, value: 1, class: 'form-control')
- analyzer.parameter_definitions.each do |definition|
  .form-group
    = label(:analysis, "parameters[#{definition.key}]", definition.key, class: 'col-md-2 control-label')
    .col-md-3
      - if definition.type == "Selection"
        = select_tag("analysis[parameters][#{definition.key}]", options_for_select(definition.options_array, selected: definition.default), class: 'form-control')
      - else
        = text_field(:analysis, "parameters[#{definition.key}]", value: definition.default.to_s, class: 'form-control')
    .col-md-6
      = definition.description
      = definition.type
#analysis_host_parameters
