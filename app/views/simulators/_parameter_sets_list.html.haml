%h3 List of Parameter Sets

.filter_set_area.paramset_title_area_item
  %div{style: "float:left; margin-top: 7px; width: 70%"}
    %i#parameter_set_filter_modal_btn.fa.fa-search.fa-lg.clickable{onclick: "$('#parameter_set_filter_form_modal').modal('show');", style: "padding: 5px;", data: {html: 'true', toggle: 'tooltip', original: {title: 'filter'}}}
    %span#parameter_filter_selected
    - if @filter
      = @filter.name if @filter.name
      = raw(query_badge(@filter))
      - if OACIS_ACCESS_LEVEL >= 1
        %a#parameter_save_filter_btn{href: "#", onclick: "$('#filter_name_form_modal').modal('show');", data: {q: @filter}}
          Save
      %a#parameter_save_filter_btn{href: simulator_path(@simulator)}
        Clear
    - else
      not filtering
  %div{style: "float:right"}
    %a.btn.btn-default{href: export_runs_simulator_path(@simulator, format: :csv), style: "float: left; margin-right: 3px;"}
      Export Runs in CSV
    - if OACIS_ACCESS_LEVEL >= 1
      %a.btn.btn-primary{href: new_simulator_parameter_set_path(@simulator), style: "float: left; margin-right: 3px;"}
        New Parameter Set

.clear-element
.create_ps_area{id: "ps_being_created_#{@simulator.id}"}
  = render partial: 'save_ps_task_status', locals: {simulator: @simulator, offset_num_ps: 0, offset_num_runs: 0}
.clear-element
%table.table.table-condensed.table-striped.fixed_thead#params_list{:'data-source' => "#{_parameter_sets_list_simulator_path(@simulator.to_param, format: "json", q: @filter&.conditions.to_json)}"}
  %thead
    %tr
      - ParameterSetsListDatatable.header(@simulator).each do |th_element|
        = raw(th_element)
  %tbody

- if OACIS_ACCESS_LEVEL >= 1
  = render partial: 'create_runs_on_selected_modal', locals: {simulator: @simulator}

#parameter_set_filter_form_modal.modal.large.fade
  .modal-dialog.modal-vertical-centered
    .modal-content
      = render 'filter_form', simulator: @simulator, q: (@filter&.conditions or [[]])

#parameter_set_filters_list_modal.modal.large.fade
  .modal-dialog.modal-vertical-centered
    .modal-content
      .modal-header
        %button.close{type: "button", "data-dismiss": "modal"}
          &times;
        %h4 Filters
      .modal-body.large
        = render "filters_list", simulator: @simulator

- if OACIS_ACCESS_LEVEL >= 1
  #filter_name_form_modal.modal.large.fade
    .modal-dialog.modal-vertical-centered
      .modal-content
        .modal-header
          %button.close{type: "button", "data-dismiss": "modal"}
            &times;
          %h4 Save this filter as
        = form_tag(save_filter_simulator_path(@simulator), class: 'form-horizontal', id: 'save_filter_form') do
          .modal-body.large
            %h4 Name
            = text_field_tag "filter_name", "filter1", class: 'form-control', id: 'filter_name_field'
            = hidden_field_tag :q, @filter&.conditions.to_json
          .modal-footer
            %input#parameter_save_filter_set_ok.btn.btn-primary{type: "submit", value: "Save", "data-dismiss": "modal", 'data-find-field-path': _find_filter_simulator_path(@simulator)}

- if OACIS_ACCESS_LEVEL >= 1
  #parameter_set_filter_update_form_modal.modal.large.fade
    .modal-dialog.modal-vertical-centered
      .modal-content
        = render 'filter_update_form', simulator: @simulator

:javascript
  $(function() {
    const objPSTable = create_parameter_sets_list('#params_list', 100);
  });
  $(function () {
    $('#ps_check_all').prop('checked', false); // workaround for a bug of Chrome
  });
  $("#parameter_save_filter_set_ok").on("click", function() {
    let name = $("#filter_name_field").val();
    if (!validate_filter_name(name)) { return false; }

    let url = $(this).data('find-field-path');
    jQuery.ajax(url, {
      type: 'get',
      data: { filter_name: name },
      dataType: 'json'
    })
    .done(function(data) {
      if(data) {
        const n = data["name"];
        if (confirm("Filter '"+n+"' already exists. Overwrite?")) {
          $('#save_filter_form').submit();
        } else {
          return false;
        }
      }
      else {
        $('#save_filter_form').submit();
      }
    });
  });

