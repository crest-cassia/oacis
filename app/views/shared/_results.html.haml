- title ||= "Results"
- if result.present?
  %h3= title
- if result.is_a?(Hash)
  %table.table.table-condensed
    %thead
    %tbody
      - result.each do |key,val|
        %tr
          %th= h(key)
          %td
            - if val.is_a?(Hash) or val.is_a?(Array)
              - begin
                - j = JSON.pretty_generate(val)
              - rescue JSON::GeneratorError
                - j = val.to_json
              %pre= h(j)
            - else
              = h(val)
- elsif result.is_a?(Array)
  %pre= h(JSON.pretty_generate(result))
- elsif not result.nil?
  %pre= h(result.inspect)

- if result_paths.present?
  %h3 Output Files
  .result-tree
    = File.dirname(file_path_to_link_path(result_paths.first))+"/"
    = make_tree_from_result_paths( result_paths )
  - if File.exist?( archived_result_path.to_s )
    %a.btn.btn-primary{href: file_path_to_link_path(archived_result_path)} Download Archive
:css
  ul.dynatree-container
  {
    border: none;
  }
  ul.dynatree-container img
  {
    width: 200px;
    height: auto;
  }

:javascript
  $(function () {
    $(".result-tree").each( function() {
      $(this).dynatree({
        onClick: function(node) {
          if (node.data.href) {
            location.href=node.data.href;
          }
        }
      });
    });
  });
