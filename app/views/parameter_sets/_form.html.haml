- simulator = parameter_set.simulator
= form_for([simulator, parameter_set], html: {class: 'form-horizontal', :'data-cli-url' => _create_cli_simulator_parameter_sets_url(simulator) } ) do |f|
  = render partial: 'shared/error_messages', locals: {error_messages: parameter_set.errors.full_messages}
  = render partial: 'shared/error_messages', locals: {error_messages: run.errors.full_messages}
  - parameter_set.simulator.parameter_definitions.each do |pd|
    - key = pd.key
    - property = :"v[#{key}]"
    - value = parameter_set.v[key]
    .form-group
      = label_tag(property, "#{key} (#{pd.type})", class: 'col-md-2 control-label')
      .col-md-3
        - if pd.type == "Selection"
          = select_tag(property, options_for_select(pd.options_array, selected: value), multiple: true, class: 'form-control', 'aria-describedby': "desc_#{key}")
        - elsif pd.type == "Object"
          = text_area_tag(property, value.to_s, class: 'form-control', 'aria-describedby': "desc_#{key}", data: {html: 'true', toggle: 'tooltip', placement: 'bottom', 'original-title': "use JSON format"})
        - else
          = text_field_tag(property, value.to_s, class: 'form-control', 'aria-describedby': "desc_#{key}")
      .col-md-4
        %span{id: "desc_#{key}", class: "help-block"}
          = pd.description
  .form-group
    = label_tag('num_runs', 'Target # of Runs', class: 'col-md-2 control-label')
    .col-md-3
      = select_tag('num_runs', options_for_select([0,1,2,3,4,5,10,20,50,100], selected: (@num_runs || 1)), class: 'form-control')
  #runs_fields
    = fields_for run do |builder|
      = render 'runs/fields', run: builder.object, f: builder
  .form-group
    .col-md-2.col-md-offset-2
      = submit_tag "Create", class: 'btn btn-primary'
      = link_to "Cancel", simulator_path(simulator), class: 'btn btn-default'
  CLI command:
  %pre#cli-command

:javascript
  $(function() {
    const hide_show_runs_field = function () {
      if( $('#num_runs').val() == 0 ) {
        $('#runs_fields').find(':input').attr('disabled', true);
      }
      else {
        $('#runs_fields').find(':input').removeAttr('disabled');
      }
    }
    hide_show_runs_field();
    $('#num_runs').change(hide_show_runs_field);
  });

  $(function() {
    const show_cli_command = function() {
      const form = $('#new_parameter_set');
      $.get(form.data('cli-url'), form.serialize(), function(data) {
        $('#cli-command').text(data);
      });
    }
    $('#new_parameter_set').change(show_cli_command);
    show_cli_command();
  });
